name: Build Multi-Platform

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: write
  pull-requests: write
  issues: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            target: "aarch64-apple-darwin"
            arch: "arm64"
            platform_name: "macos-arm64"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            target: "x86_64-apple-darwin"
            arch: "x64"
            platform_name: "macos-x64"
          - platform: "ubuntu-22.04"
            args: ""
            arch: "x64"
            platform_name: "linux-amd64"
          - platform: "windows-latest"
            args: ""
            arch: "x64"
            platform_name: "windows-x64"

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust setup (with target)
        if: matrix.target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Rust setup (default)
        if: ${{ !matrix.target }}
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Update npm to latest
        run: npm install -g npm@latest

      - name: Clean and install frontend dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          if (Test-Path node_modules) { Remove-Item -Recurse -Force node_modules }
          if (Test-Path package-lock.json) { Remove-Item -Force package-lock.json }
          npm install

      - name: Clean and install frontend dependencies (Unix)
        if: matrix.platform != 'windows-latest'
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Build frontend
        run: npm run build

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "ZAugment ${{ github.ref_name }}"
          releaseBody: |
            ## 🚀 ZAugment ${{ github.ref_name }} 发布

            ### 更新内容
            1. **阈值配置优化**：
               - 修改默认阈值为 时间：10/20/365 天，额度：10000/20000/1000000
               - 改进输入验证逻辑，失去焦点时显示错误提示而不是自动修正
               - 添加红色边框高亮和错误提示信息
               - 移除数字输入框的上下箭头
            2. **配置文件优化**：
               - 将阈值配置合并到统一的 config.json 文件中
               - 减少配置文件数量，简化数据管理
            3. **云同步修复**：
               - 修复强制下载后阈值配置未更新的问题
               - 确保从云端下载后正确加载所有配置

            ### 📥 下载文件
            | 平台 | 文件名 |
            |------|--------|
            | **Windows** | `ZAugment_${{ github.ref_name }}_x64-setup.exe` |
            | **macOS (Intel)** | `ZAugment_${{ github.ref_name }}_x64.dmg` |
            | **macOS (Apple Silicon)** | `ZAugment_${{ github.ref_name }}_aarch64.dmg` |
            | **Linux (Ubuntu/Debian)** | `ZAugment_${{ github.ref_name }}_amd64.deb` |
            | **Linux (CentOS/RHEL)** | `ZAugment-${{ github.ref_name }}-1.x86_64.rpm` |

            ### 🔧 安装方法
            **Windows:** 下载 `.exe` 文件双击安装，如遇警告点击"更多信息" → "仍要运行"

            **macOS:** 下载对应芯片的 `.dmg` 文件拖拽到应用程序文件夹，如遇安装包已损坏运行：
            sudo xattr -rd com.apple.quarantine /Applications/ZAugment.app

            **Linux:**
             Ubuntu/Debian
            sudo dpkg -i ZAugment_${{ github.ref_name }}_amd64.deb
             CentOS/RHEL/Fedora
            sudo rpm -i ZAugment-${{ github.ref_name }}-1.x86_64.rpm


            ---
            **🔒 安全说明**: 如遇安全软件误报属正常现象
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
          includeUpdaterJson: false

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}-build
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/**/*
            !src-tauri/target/${{ matrix.target }}/release/bundle/**/.*
          retention-days: 30
          if-no-files-found: warn

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}-build
          path: |
            src-tauri/target/release/bundle/**/*
            !src-tauri/target/release/bundle/**/.*
          retention-days: 30
          if-no-files-found: warn

      - name: Upload artifacts (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}-build
          path: |
            src-tauri/target/release/bundle/**/*
            !src-tauri/target/release/bundle/**/.*
          retention-days: 30
          if-no-files-found: warn
